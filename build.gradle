plugins {
    id "java-library"
    id "maven-publish"
    id "signing"
}

group = "io.snyk.code.sdk"
archivesBaseName = "snyk-code-client"
version = "2.2.0"

repositories {
    mavenLocal()
    mavenCentral()
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"


java {
    withJavadocJar()
    withSourcesJar()
}

sourceSets {
    integTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    integTestImplementation.extendsFrom implementation
    integTestRuntimeOnly.extendsFrom runtimeOnly
}

compileIntegTestJava {
    sourceCompatibility = 11
    targetCompatibility = 11
}

compileTestJava {
    sourceCompatibility = 11
    targetCompatibility = 11
}

dependencies {
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'org.jetbrains:annotations:22.0.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.2'

    testImplementation 'junit:junit:4.13.2'

    integTestImplementation "junit:junit:4.12"
}

task integTest(type: Test) {
    description = "Runs integration tests."
    group = "verification"

    testClassesDirs = sourceSets.integTest.output.classesDirs
    classpath = sourceSets.integTest.runtimeClasspath
    shouldRunAfter test

    testLogging {
        exceptionFormat "full"
        showStandardStreams = true
    }
    outputs.upToDateWhen { false }
}
integTest.dependsOn test

publishing {
    repositories {
        maven {
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.hasProperty("ossrhUsername") ? ossrhUsername : "Unknown user"
                password = project.hasProperty("ossrhPassword") ? ossrhPassword : "Unknown password"
            }
        }
    }

    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                description = "Snyk Code Public API package in Java"
                url = "https://github.com/snyk/code-sdk-java"
                name = "Snyk Code API Client"
                developers {
                    developer {
                        id = "road-runner"
                        name = "Team Road Runner"
                        email = "roadrunner@snyk.io"
                    }
                }
                licenses {
                    license {
                        name = "MIT License"
                        url = "https://spdx.org/licenses/MIT.html"
                    }
                }
                scm {
                    connection = "scm:git:git@github.com:snyk/code-sdk-java.git"
                    developerConnection = "scm:git:git@github.com:snyk/code-sdk-java.git"
                    url = "https://github.com/snyk/code-sdk-java"
                }
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}
tasks.withType(Sign) {
    onlyIf { project.hasProperty("release") }
}
